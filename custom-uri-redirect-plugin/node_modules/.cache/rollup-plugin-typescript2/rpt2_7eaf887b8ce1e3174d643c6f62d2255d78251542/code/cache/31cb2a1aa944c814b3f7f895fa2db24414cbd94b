{"code":"import { __awaiter } from \"tslib\";\nimport { Plugin } from 'obsidian';\nexport default class CustomUriRedirectPlugin extends Plugin {\n    onload() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Log message to indicate the plugin is loading\n            console.log('Loading Custom URI Redirect Plugin');\n            // Register a Markdown post processor to handle custom URI links\n            console.log('Registering Markdown post processor');\n            this.registerMarkdownPostProcessor(this.processCustomUriLinks);\n        });\n    }\n    onunload() {\n        // Log message to indicate the plugin is unloading\n        console.log('Unloading Custom URI Redirect Plugin');\n    }\n    // Function to process custom URI links in Markdown content\n    processCustomUriLinks(el, ctx) {\n        console.log('Processing custom URI links');\n        // Find all links in the element that start with 'custom-uri:'\n        const links = el.querySelectorAll('a[href^=\"custom-uri:\"]');\n        console.log(`Found ${links.length} custom URI links`);\n        // Iterate over each link and perform custom processing\n        links.forEach(link => {\n            console.log(`Processing link: ${link.getAttribute('href')}`);\n            // Implement logic for custom URI redirects\n        });\n    }\n}\n","references":[]}
